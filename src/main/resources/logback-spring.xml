<?xml version="1.0" encoding="UTF-8"?>
<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则  根据当前ROOT 级别，日志输出时，级别高于root默认的级别时  会输出 -->
<!-- 以下  每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志-->
<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <!-- 定义日志文件 根目录-->
    <springProperty scope="context" name="APP_NAME" source="spring.application.name"/>
    <springProperty scope="context" name="PROFILE" source="spring.profiles.active"/>
    <springProperty scope="context" name="BASE_DIR" source="logging.dir" defaultValue="./logs"/>
    <springProperty scope="context" name="BASE_PATH" source="logging.path" defaultValue="${BASE_DIR}/${APP_NAME}/${PROFILE}"/>
    <!-- 日志最大的历史 天数 -->
    <springProperty scope="context" name="MAX_HISTORY" source="logging.max-history" defaultValue="7"/>
    <!-- 日志单体大小 -->
    <springProperty scope="context" name="MAX_FILE_SIZE" source="logging.max-size" defaultValue="500MB"/>
    <!-- 日志最大容量 -->
    <springProperty scope="context" name="TOTAL_SIZE_CAP" source="logging.total-size-cap" defaultValue="2GB"/>
    <!-- 日志级别 -->
    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root" defaultValue="INFO"/>
    <!-- INFO日志异步队列大小 -->
    <springProperty scope="context" name="LOG_QUEUE_SIZE" source="logging.queue-size" defaultValue="4096"/>
    <!-- 开启控制台打印 -->
    <springProperty scope="context" name="ENABLE_CONSOLE" source="logging.console-enabled" defaultValue="false"/>
    <!-- 开启日志文件打印 -->
    <springProperty scope="context" name="ENABLE_FILE" source="logging.file-enabled" defaultValue="false"/>
    <!-- 开启logstash日志打印 -->
    <springProperty scope="context" name="ENABLE_LOGSTASH" source="logging.logstash-enabled" defaultValue="false"/>
    <!-- logstash destination -->
    <springProperty scope="context" name="LOGSTASH_DESTINATION" source="logging.logstash-destination" defaultValue="192.168.202.111:5044"/>
    <!-- 自定义扩展文件 -->
    <springProperty scope="context" name="EXTEND_CONFIG_FILE" source="logging.extend-config" defaultValue=""/>

    <include resource="logback-base.xml"/>

    <if condition='!property("EXTEND_CONFIG_FILE").equals("")'>
        <then>
            <include resource="${EXTEND_CONFIG_FILE}"/>
        </then>
    </if>
</configuration>